@startuml

title __METEOR's Class Diagram__\n

  namespace hu.euronetrt.okoskp.euronethealth.serverCommunicate.meteor {
    class hu.euronetrt.okoskp.euronethealth.serverCommunicate.meteor.EuronetMeteor {
        {static} - LOGGER : Logger
        {static} - RECONNECT_ATTEMPTS_MAX : int
        {static} - SUPPORTED_DDP_VERSIONS : String[]
        {static} - TAG : String
        - mAccountManager : AccountManager
        - mCallbackProxy : CallbackProxy
        - mConnected : boolean
        - mContext : Context
        - mDataStore : DataStore
        - mDdpVersion : String
        - mInvalidate : boolean
        - mListeners : Map<String, Listener>
        - mLoggedInUserId : String
        {static} - mLoggingEnabled : boolean
        {static} - mObjectMapper : ObjectMapper
        - mQueuedMessages : Queue<String>
        - mReconnectAttempts : int
        - mServerUri : String
        - mSessionID : String
        - mWebSocket : WebSocket
        - mWebSocketListener : WebSocketListener
        + addCallback()
        + call()
        + call()
        + call()
        + call()
        + callWithSeed()
        + callWithSeed()
        + callWithSeed()
        + connect()
        + getDataStore()
        + getDatabase()
        + getUserId()
        + insert()
        + isConnected()
        + isLoggedIn()
        {static} + log()
        + loginWithEmail()
        + loginWithUsername()
        + logout()
        + logout()
        + registerAndLogin()
        + registerAndLogin()
        + remove()
        + remove()
        + removeCallback()
        {static} + setLoggingEnabled()
        + subscribe()
        + subscribe()
        + subscribe()
        + tokenInvalidate()
        + unsubscribe()
        + unsubscribe()
        + update()
        + update()
        ~ EuronetMeteor()
        ~ EuronetMeteor()
        ~ EuronetMeteor()
        ~ EuronetMeteor()
        ~ disconnect()
        ~ insert()
        {static} ~ isVersionSupported()
        ~ removeCallbacks()
        {static} ~ uniqueID()
        ~ update()
        - announceSessionReady()
        {static} - emptyMap()
        - fromJson()
        - getExistingAccountAuthToken()
        - getLoginToken()
        - handleMessage()
        - initConnection()
        - initSession()
        - invalidateAuthToken()
        {static} - isLoginResult()
        - login()
        - loginWithToken()
        - openConnection()
        - reconnect()
        - saveLoginToken()
        - send()
        - send()
        - sendPong()
        - toJson()
    }
  }
  

  namespace hu.euronetrt.okoskp.euronethealth.serverCommunicate.meteor {
    class hu.euronetrt.okoskp.euronethealth.serverCommunicate.meteor.EuronetMeteorSingleton {
        {static} - mInstance : EuronetMeteorSingleton
        {static} + createInstance()
        {static} + createInstance()
        {static} + createInstance()
        {static} + createInstance()
        {static} + destroyInstance()
        {static} + getInstance()
        {static} + hasInstance()
        - EuronetMeteorSingleton()
        - EuronetMeteorSingleton()
        - EuronetMeteorSingleton()
        - EuronetMeteorSingleton()
    }
  }
  

  hu.euronetrt.okoskp.euronethealth.serverCommunicate.meteor.EuronetMeteorSingleton -up-|> hu.euronetrt.okoskp.euronethealth.serverCommunicate.meteor.EuronetMeteor


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
